var SIM=SIM||{};SIM.SETTINGS={init:function(){this.variables(),this.events(),this.buildSpells(),this.buildBuffs(),this.buildTalents()},variables:function(){this.body=$("body"),this.buffs=this.body.find("article.buffs"),this.fight=this.body.find("article.fight"),this.rotation=this.body.find("article.rotation"),this.talents=this.body.find("article.talents"),this.filter=this.body.find("article.filter"),this.close=this.body.find("section.settings .btn-close"),this.bg=this.body.find("section.sidebar .bg")},events:function(){var e=this;e.close.click(function(e){e.preventDefault(),$(".js-settings").removeClass("active"),$("section.settings").removeClass("active")}),e.buffs.on("click",".icon",function(){let t=$(this).toggleClass("active");t.hasClass("active")&&(t.data("group")&&t.siblings().filter('[data-group="'+t.data("group")+'"]').removeClass("active"),t.data("disable-spell")&&$('.rotation [data-id="'+t.data("disable-spell")+'"]').removeClass("active"));for(let t of buffs)t.active=e.buffs.find('[data-id="'+t.id+'"]').hasClass("active");SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.talents.on("click",".icon",function(t){let a=e.getTalent($(this));a.c=a.c<a.m?a.c+1:a.m,$(this).attr("data-count",a.c),a.c>=a.m&&$(this).addClass("maxed"),a.enable&&$('.rotation [data-id="'+a.enable+'"]').removeClass("hidden"),$(this).find("a").attr("href","https://classic.wowhead.com/spell="+a.s[0==a.c?0:a.c-1]),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.talents.on("contextmenu",".icon",function(t){t.preventDefault();let a=e.getTalent($(this));if(a.c=a.c<1?0:a.c-1,$(this).attr("data-count",a.c),$(this).removeClass("maxed"),0==a.c&&a.enable){$('.rotation [data-id="'+a.enable+'"]').removeClass("active").addClass("hidden");for(let e of spells)e.id==a.enable&&(e.active=!1)}$(this).find("a").attr("href","https://classic.wowhead.com/spell="+a.s[0==a.c?0:a.c-1]),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.filter.on("click",".sources li",function(t){if($(this).toggleClass("active"),$(this).hasClass("active")){let t=$(this).data("id");e.filter.find(`.phases [data-sources*="${t}"]`).addClass("active")}SIM.UI.updateSession(),SIM.UI.filterGear()}),e.filter.on("click",".phases li",function(t){$(this).toggleClass("active");let a=$(this).data("sources").split(","),i=$(this).hasClass("active");for(let t of a)i?e.filter.find('.sources [data-id="'+t+'"]').addClass("active"):e.filter.find('.sources [data-id="'+t+'"]').removeClass("active");SIM.UI.updateSession(),SIM.UI.filterGear()}),e.rotation.on("click",".spell",function(e){let t=e.target;if("LI"==t.nodeName||"INPUT"==t.nodeName)return;$(this).toggleClass("active");let a=$(this).data("id");for(let e of spells)e.id==a&&(e.active=$(this).hasClass("active"));SIM.UI.updateSession()}),e.rotation.on("keyup",'input[type="text"]',function(e){let t=$(this).parents(".spell").data("id");for(let e of spells)e.id==t&&(e[$(this).attr("name")]=$(this).val());SIM.UI.updateSession()}),e.fight.on("change",'select[name="race"]',function(t){var a=$(this).val(),i=e.rotation.find('[data-id="20572"]'),n=e.rotation.find('[data-id="26296"]'),s=[];"Orc"==a?i.removeClass("hidden"):(i.addClass("hidden").removeClass("active"),s.push(20572)),"Troll"==a?n.removeClass("hidden"):(n.addClass("hidden").removeClass("active"),s.push(26296));for(let e of spells)s.includes(e.id)&&(e.active=!1);e.bg.attr("data-race",a),SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("change",'select[name="aqbooks"]',function(e){SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("keyup",'input[type="text"]',function(e){SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("change",'select[name="weaponrng"]',function(e){SIM.UI.updateSession(),SIM.UI.updateSidebar()}),e.fight.on("change",'select[name="batching"]',function(e){SIM.UI.updateSession(),SIM.UI.updateSidebar()})},buildSpells:function(){for(let e of spells){let t=115671==e.id?11567:e.id,a=$(`<div data-id="${e.id}" class="spell"><div class="icon">\n            <img src="dist/img/${e.iconname.toLowerCase()}.jpg " alt="${e.name}">\n            <a href="https://classic.wowhead.com/spell=${t}" class="wh-tooltip"></a>\n            </div><ul class="options"></ul></div>`);void 0!==e.timetoend&&a.find(".options").append(`<li>Use on last <input type="text" name="timetoend" value="${e.timetoend}" data-numberonly="true" /> seconds</li>`),void 0!==e.minrage&&a.find(".options").append(`<li>Use when above <input type="text" name="minrage" value="${e.minrage}" data-numberonly="true" /> rage</li>`),void 0!==e.maxrage&&a.find(".options").append(`<li>Use when below <input type="text" name="maxrage" value="${e.maxrage}" data-numberonly="true" /> rage</li>`),void 0!==e.globals&&a.find(".options").append(`<li>Use on first <input type="text" name="globals" value="${e.globals}" data-numberonly="true" /> globals</li>`),void 0!==e.maincd&&a.find(".options").append(`<li>BT/MS cooldown >= <input type="text" name="maincd" value="${e.maincd}" data-numberonly="true" /> secs</li>`),void 0!==e.crusaders&&a.find(".options").append(`<li>when <input type="text" name="crusaders" value="${e.crusaders}" data-numberonly="true" /> crusaders are up</li>`),void 0!==e.haste&&a.find(".options").append(`<li>Attack speed at <input type="text" name="haste" value="${e.haste}" data-numberonly="true" /> %</li>`),void 0!==e.priorityap&&a.find(".options").append(`<li>Prioritize BT/MS when >= <input style="width:25px" type="text" name="priorityap" value="${e.priorityap}" data-numberonly="true" /> AP</li>`),23255==e.id&&a.find(".options").append("<li>Include Deep Wounds damage</li>"),11605==e.id&&a.find(".options").append("<li>Slam macro with MH swing</li>"),2687==e.id&&a.find(".options").append("<li>Used on cooldown below 80 rage</li>"),void 0!==e.reaction&&a.find(".options").append(`<li><input style="width:25px" type="text" name="reaction" value="${e.reaction}" data-numberonly="true" /> ms reaction time</li>`),e.hidden&&a.addClass("hidden"),"Orc"==localStorage.race&&20572==e.id&&a.removeClass("hidden"),"Troll"==localStorage.race&&26296==e.id&&a.removeClass("hidden"),e.active&&a.addClass("active"),void 0!==e.maincd&&a.find(".options li:first-of-type").append(" or"),void 0!==e.crusaders&&a.find(".options li:first-of-type").append(" or"),11567==e.id&&(a.find(".options").empty(),a.find(".options").append('<li>Queue when above <input type="text" name="minrage" value="30" data-numberonly="true"> rage or BT/MS cooldown >= <input type="text" name="maincd" value="4" data-numberonly="true"> secs</li>'),a.find(".options").append(`<li>Unqueue if below <input type="text" name="unqueue" value="${e.unqueue}" data-numberonly="true" /> rage, <input type="text" name="unqueuetimer" value="${e.unqueuetimer}" data-numberonly="true" /> ms before MH swing</li>`),a.find(".options").append(`<li><input style="width:25px" type="text" name="reaction" value="${e.reaction}" data-numberonly="true" /> ms reaction time</li>`)),115671==e.id&&(a.find(".options").empty(),a.find(".options").before("<label>Execute phase HS:</label>"),a.find(".options").append('<li>Queue when above <input type="text" name="minrage" value="30" data-numberonly="true"> rage</li>'),a.find(".options").append(`<li>Unqueue if below <input type="text" name="unqueue" value="${e.unqueue}" data-numberonly="true" /> rage, <input type="text" name="unqueuetimer" value="${e.unqueuetimer}" data-numberonly="true" /> ms before MH swing</li>`),a.find(".options").append(`<li><input style="width:25px" type="text" name="reaction" value="${e.reaction}" data-numberonly="true" /> ms reaction time</li>`)),11585==e.id&&(a.find(".options").empty(),a.find(".options").append(`<li>Use when below <input type="text" name="maxrage" value="${e.maxrage}" data-numberonly="true" /> rage and</li>`),a.find(".options").append(`<li>BT/MS cooldown >= <input type="text" name="maincd" value="${e.maincd}" data-numberonly="true" /> secs</li>`),a.find(".options").append(`<li><input style="width:25px" type="text" name="reaction" value="${e.reaction}" data-numberonly="true" /> ms reaction time</li>`)),this.rotation.append(a)}this.rotation.children().eq(3).appendTo(this.rotation),this.rotation.children().eq(19).appendTo(this.rotation)},buildBuffs:function(){for(let e of buffs){let t=e.spellid?"spell":"item",a=e.active?"active":"",i=e.group?`data-group="${e.group}"`:"",n=e.disableSpell?`data-disable-spell="${e.disableSpell}"`:"",s=`<div data-id="${e.id}" class="icon ${a}" ${i} ${n}>\n                            <img src="dist/img/${e.iconname.toLowerCase()}.jpg " alt="${e.name}">\n                            <a href="https://classic.wowhead.com/${t}=${e.id}" class="wh-tooltip"></a>\n                        </div>`;this.buffs.append(s)}},buildTalents:function(){for(let e of talents){let t=$('<table><tr><th colspan="4">'+e.n+"</th></tr></table>");for(let e=0;e<7;e++)t.prepend("<tr><td></td><td></td><td></td><td></td></tr>");for(let a of e.t){let e=$('<div class="icon" data-count="'+a.c+'" data-x="'+a.x+'" data-y="'+a.y+'"></div>');e.html('<img src="dist/img/'+a.iconname.toLowerCase()+'.jpg" alt="'+a.n+'" />'),a.c>=a.m&&e.addClass("maxed"),a.enable&&0==a.c&&this.rotation.find('[data-id="'+a.enable+'"]').addClass("hidden"),a.enable&&a.c>0&&this.rotation.find('[data-id="'+a.enable+'"]').removeClass("hidden"),e.append('<a href="https://classic.wowhead.com/spell='+a.s[0==a.c?0:a.c-1]+'" class="wh-tooltip"></a>'),t.find("tr").eq(a.y).children().eq(a.x).append(e)}this.talents.append(t)}},getTalent:function(e){let t=e.parents("table").index(),a=e.data("x"),i=e.data("y");for(let e of talents[t-1].t)if(e.x==a&&e.y==i)return e}};