class Spell{constructor(t){this.timer=0,this.cost=0,this.cooldown=0,this.player=t,this.refund=!0,this.canDodge=!0,this.totaldmg=0,this.data=[0,0,0,0,0],this.name=this.constructor.name,this.useonly=!1,this.maxdelay=100,this.weaponspell=!0}dmg(){return 0}use(){this.player.timer=1500,this.player.rage-=this.cost,this.timer=1e3*this.cooldown}step(t){return this.timer<=t?this.timer=0:this.timer-=t,this.timer}canUse(){return 0==this.timer&&this.cost<=this.player.rage}}class Bloodthirst extends Spell{constructor(t){super(t),this.cost=30,this.cooldown=6,this.threshold=parseInt(spells[0].minrage),this.maxdelay=parseInt(spells[0].reaction),this.weaponspell=!1}dmg(){return.45*this.player.stats.ap}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.threshold}}class Whirlwind extends Spell{constructor(t){super(t),this.cost=25,this.cooldown=10,this.refund=!1,this.threshold=parseInt(spells[5].minrage),this.maincd=1e3*parseInt(spells[5].maincd),this.maxdelay=parseInt(spells[5].reaction)}dmg(){let t;return(t=this.player.weaponrng?rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg):avg(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg))+this.player.stats.ap/14*this.player.mh.normSpeed}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&(this.player.rage>=this.threshold||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class Overpower extends Spell{constructor(t){super(t),this.cost=5,this.cooldown=5,this.canDodge=!1,this.threshold=parseInt(spells[9].maxrage),this.maincd=1e3*parseInt(spells[9].maincd),this.maxdelay=parseInt(spells[9].reaction)}dmg(){let t;return(t=this.player.weaponrng?35+rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg):35+avg(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg))+this.player.stats.ap/14*this.player.mh.normSpeed}use(){this.player.timer=1500,this.player.dodgetimer=0,this.player.rage=Math.min(this.player.rage,this.player.talents.rageretained),this.player.rage-=this.cost,this.timer=1e3*this.cooldown,this.player.zerkstance&&this.player.auras.battlestance.use()}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.dodgetimer&&this.player.rage<=this.threshold&&(this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)}}class Execute extends Spell{constructor(t){super(t),this.cost=15-t.talents.executecost,this.usedrage=0,this.maxdelay=parseInt(spells[4].reaction),this.refund=!1,this.weaponspell=!1}dmg(){return 600+15*this.usedrage}use(){this.player.timer=1500,this.player.rage-=this.cost,this.usedrage=~~this.player.rage,this.timer=batching-step%batching}step(t){return this.timer<=t?(this.timer=0,this.result!=RESULT.MISS&&this.result!=RESULT.DODGE&&(this.player.rage=0)):this.timer-=t,this.timer}canUse(){return!this.player.timer&&this.cost<=this.player.rage}}class Bloodrage extends Spell{constructor(t){super(t),this.cost=0,this.rage=10+t.talents.bloodragebonus,this.threshold=80,this.cooldown=60,this.useonly=!0,this.maxdelay=parseInt(spells[12].reaction)}use(){this.timer=1e3*this.cooldown,this.player.rage=Math.min(this.player.rage+this.rage,100),this.player.auras.bloodrage.use()}canUse(){return 0==this.timer&&this.player.rage<this.threshold}}class HeroicStrike extends Spell{constructor(t){super(t),this.cost=15-t.talents.impheroicstrike,this.threshold=parseInt(spells[2].minrage),this.maincd=1e3*parseInt(spells[2].maincd),this.unqueue=parseInt(spells[2].unqueue),this.unqueuetimer=parseInt(spells[2].unqueuetimer),this.name="Heroic Strike",this.bonus=t.aqbooks?157:138,this.maxdelay=parseInt(spells[2].reaction),this.useonly=!0}use(){this.player.nextswinghs=!0}canUse(){return!this.player.nextswinghs&&this.cost<=this.player.rage&&(this.player.rage>=this.threshold||this.player.spells.bloodthirst&&this.player.spells.bloodthirst.timer>=this.maincd||this.player.spells.mortalstrike&&this.player.spells.mortalstrike.timer>=this.maincd)&&(!this.unqueue||this.player.mh.timer>this.unqueuetimer)}}class HeroicStrikeExecute extends Spell{constructor(t){super(t),this.cost=15-t.talents.impheroicstrike,this.threshold=parseInt(spells[19].minrage),this.unqueue=parseInt(spells[19].unqueue),this.unqueuetimer=parseInt(spells[19].unqueuetimer),this.name="Heroic Strike (Execute Phase)",this.bonus=t.aqbooks?157:138,this.maxdelay=parseInt(spells[19].reaction),this.useonly=!0}use(){this.player.nextswinghs=!0}canUse(){return!this.player.nextswinghs&&this.cost<=this.player.rage&&this.player.rage>=this.threshold&&(!this.unqueue||this.player.mh.timer>this.unqueuetimer)}}class MortalStrike extends Spell{constructor(t){super(t),this.cost=30,this.cooldown=6,this.name="Mortal Strike",this.threshold=parseInt(spells[1].minrage),this.maxdelay=parseInt(spells[1].reaction)}dmg(){let t;return(t=this.player.weaponrng?160+rng(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg):160+avg(this.player.mh.mindmg+this.player.mh.bonusdmg,this.player.mh.maxdmg+this.player.mh.bonusdmg))+this.player.stats.ap/14*this.player.mh.normSpeed}canUse(){return!this.timer&&!this.player.timer&&this.cost<=this.player.rage&&this.player.rage>=this.threshold}}class SunderArmor extends Spell{constructor(t){super(t),this.cost=15-t.talents.impsunderarmor,this.globals=parseInt(spells[16].globals),this.maxdelay=parseInt(spells[16].reaction),this.stacks=0,this.nocrit=!0,this.name="Sunder Armor"}use(){this.player.timer=1500,this.player.rage-=this.cost,this.stacks++}canUse(){return!this.player.timer&&this.stacks<this.globals&&this.cost<=this.player.rage}}class Hamstring extends Spell{constructor(t){super(t),this.cost=10,this.threshold=parseInt(spells[18].minrage),this.maxdelay=parseInt(spells[18].reaction),t.items.includes(19577)&&(this.cost-=2)}dmg(){return 45}canUse(){return!this.player.timer&&this.player.rage>=this.threshold&&this.cost<=this.player.rage}}class Aura{constructor(t){this.timer=0,this.starttimer=0,this.stats={},this.mult_stats={},this.player=t,this.firstuse=!0,this.duration=0,this.stacks=0,this.uptime=0,this.name=this.constructor.name,this.maxdelay=100,this.useonly=!0}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAuras())}end(){this.uptime+=step-this.starttimer,this.timer=0,this.stacks=0}}class Recklessness extends Aura{constructor(t){super(t),this.duration=15,this.stats={crit:100},this.maxdelay=parseInt(spells[7].reaction),this.timetoend=1e3*parseInt(spells[7].timetoend)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.player.timer=1500,this.starttimer=step,this.player.updateAuras()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&step>=this.usestep}}class Flurry extends Aura{constructor(t){super(t),this.duration=12,this.mult_stats={haste:t.talents.flurry}}proc(){this.stacks--,this.stacks||(this.uptime+=step-this.starttimer,this.timer=0,this.player.updateHaste())}use(){this.timer=1,this.stacks||(this.starttimer=step,this.player.updateHaste()),this.stacks=3}}class DeepWounds extends Aura{constructor(t){super(t),this.duration=12,this.name="Deep Wounds",this.idmg=0,this.totaldmg=0,this.lasttick=0}step(){for(;step>=this.nexttick;){let t=(this.player.mh.mindmg+this.player.mh.bonusdmg+this.player.stats.ap/14*this.player.mh.speed+(this.player.mh.maxdmg+this.player.mh.bonusdmg+this.player.stats.ap/14*this.player.mh.speed))/2;t*=this.player.mh.modifier*this.player.stats.dmgmod*this.player.talents.deepwounds,this.idmg+=~~(t/4),this.totaldmg+=~~(t/4),this.nexttick+=3e3}step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.nexttick=step+3e3,this.timer=step+1e3*this.duration,this.starttimer=step}}class Crusader extends Aura{constructor(t){super(t),this.duration=15,this.stats={str:100}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.player.updateStrength())}}class Cloudkeeper extends Aura{constructor(t){super(t),this.duration=30,this.stats={ap:100}}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras()}canUse(){return this.firstuse&&!this.player.itemtimer&&!this.timer&&!this.player.timer}}class Felstriker extends Aura{constructor(t){super(t),this.duration=3,this.stats={crit:100,hit:100}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.update()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.update())}}class DeathWish extends Aura{constructor(t){super(t),this.duration=30,this.mult_stats={dmgmod:20},this.name="Death Wish",this.crusaders=parseInt(spells[6].crusaders),this.timetoend=1e3*parseInt(spells[6].timetoend),this.maxdelay=parseInt(spells[6].reaction)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.player.rage-=10,this.player.timer=1500,this.starttimer=step,this.player.updateDmgMod()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&this.player.rage>=10&&(step>=this.usestep||1==this.crusaders&&(this.player.auras.crusader1&&this.player.auras.crusader1.timer||this.player.auras.crusader2&&this.player.auras.crusader2.timer)||2==this.crusaders&&this.player.auras.crusader1&&this.player.auras.crusader1.timer&&this.player.auras.crusader2&&this.player.auras.crusader2.timer)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateDmgMod())}}class BattleStance extends Aura{constructor(t){super(t),this.duration=2,this.stats={crit:-3},this.name="Battle Stance"}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAuras(),this.player.rage=Math.min(this.player.rage,this.player.talents.rageretained))}}class MightyRagePotion extends Aura{constructor(t){super(t),this.stats={str:60},this.duration=20,this.crusaders=parseInt(spells[13].crusaders),this.timetoend=1e3*parseInt(spells[13].timetoend),this.maxdelay=parseInt(spells[13].reaction),this.name="Mighty Rage Potion"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.player.rage=Math.min(this.player.rage+~~rng(45,75),100),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateStrength()}canUse(){return this.firstuse&&!this.timer&&(step>=this.usestep||1==this.crusaders&&(this.player.auras.crusader1&&this.player.auras.crusader1.timer||this.player.auras.crusader2&&this.player.auras.crusader2.timer)||2==this.crusaders&&this.player.auras.crusader1&&this.player.auras.crusader1.timer&&this.player.auras.crusader2&&this.player.auras.crusader2.timer)}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateStrength())}}class BloodFury extends Aura{constructor(t){super(t),this.duration=15,this.mult_stats={apmod:25},this.name="Blood Fury",this.maxdelay=parseInt(spells[11].reaction),this.timetoend=1e3*parseInt(spells[11].timetoend)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.timer=1500,this.player.updateAuras()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAuras())}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&step>=this.usestep}}class Berserking extends Aura{constructor(t){super(t),this.duration=10,this.mult_stats={haste:parseInt(spells[10].haste)},this.maxdelay=parseInt(spells[10].reaction),this.timetoend=1e3*parseInt(spells[10].timetoend)}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.rage-=5,this.player.timer=1500,this.player.updateHaste()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste())}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&this.player.rage>=5&&step>=this.usestep}}class Empyrean extends Aura{constructor(t){super(t),this.duration=10,this.mult_stats={haste:20},this.name="Empyrean Haste"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste())}}class Eskhandar extends Aura{constructor(t){super(t),this.duration=5,this.mult_stats={haste:30},this.name="Eskhandar Haste"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste())}}class Zeal extends Aura{constructor(t){super(t),this.duration=15,this.stats={bonusdmg:10}}use(){this.player.timer&&this.player.timer<1500||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateBonusDmg())}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg())}}class Annihilator extends Aura{constructor(t){super(t),this.duration=45,this.armor=200,this.stacks=0}use(){rng10k()<this.player.target.binaryresist||(this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction())}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction())}}class Rivenspike extends Aura{constructor(t){super(t),this.duration=30,this.armor=200,this.stacks=0}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction())}}class Bonereaver extends Aura{constructor(t){super(t),this.duration=10,this.armor=700,this.stacks=0}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=this.stacks>2?3:this.stacks+1,this.player.updateArmorReduction()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateArmorReduction())}}class Destiny extends Aura{constructor(t){super(t),this.duration=10,this.stats={str:200}}}class Untamed extends Aura{constructor(t){super(t),this.duration=8,this.stats={str:300},this.name="The Untamed Blade"}}class Pummeler extends Aura{constructor(t){super(t),this.duration=30,this.mult_stats={haste:50},this.name="Manual Crowd Pummeler"}use(){this.player.timer=1500,this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateHaste())}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}}class Windfury extends Aura{constructor(t){super(t),this.stats={ap:315}}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1500,this.starttimer=step,this.mintime=step%batching,this.stacks=2,this.player.updateAP(),this.player.extraattacks++}proc(){this.stacks<2?(step<this.mintime?this.timer=this.mintime:this.step(),this.stacks=0):this.stacks--}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.stacks=0,this.firstuse=!1,this.player.updateAP())}}class Swarmguard extends Aura{constructor(t){super(t),this.duration=30,this.armor=200,this.stacks=0,this.chance=5e3,this.timetoend=3e4}use(){this.timer=step+1e3*this.duration,this.starttimer=step,this.stacks=0}canUse(){return this.firstuse&&!this.timer&&step>=this.usestep}proc(){this.stacks=Math.min(this.stacks+1,6),this.player.updateArmorReduction()}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.stacks=0,this.firstuse=!1,this.player.updateArmorReduction())}}class Flask extends Aura{constructor(t){super(t),this.duration=60,this.stats={str:75},this.name="Diamond Flask"}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAuras()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}}class Slayer extends Aura{constructor(t){super(t),this.duration=20,this.stats={ap:260},this.name="Slayer's Crest"}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}}class Spider extends Aura{constructor(t){super(t),this.duration=15,this.mult_stats={haste:20},this.name="Kiss of the Spider"}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateHaste()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}}class Earthstrike extends Aura{constructor(t){super(t),this.duration=20,this.stats={ap:280}}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}}class Gabbar extends Aura{constructor(t){super(t),this.duration=20,this.stats={ap:65},this.name="Jom Gabbar"}use(){this.stats.ap=65,this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.player.updateAP()}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}step(){(step-this.starttimer)%2e3==0&&(this.stats.ap+=65,this.player.updateAP()),step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateAP())}}class PrimalBlessing extends Aura{constructor(t){super(t),this.duration=12,this.stats={ap:300},this.name="Primal Blessing"}}class BloodrageAura extends Aura{constructor(t){super(t),this.duration=10,this.name="Bloodrage"}use(){this.timer&&(this.uptime+=step-this.starttimer),this.timer=step+1e3*this.duration,this.starttimer=step}step(){return(step-this.starttimer)%1e3==0&&(this.player.rage=Math.min(this.player.rage+1,100)),step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0),this.timer}}class Zandalarian extends Aura{constructor(t){super(t),this.duration=20,this.stats={bonusdmg:40}}use(){this.player.timer=1500,this.player.itemtimer=1e3*this.duration,this.timer=step+1e3*this.duration,this.starttimer=step,this.stats.bonusdmg=40,this.player.updateBonusDmg()}proc(){this.stats.bonusdmg-=2,this.player.updateBonusDmg(),this.stats.bonusdmg<=0&&(this.timer=step,this.step())}canUse(){return this.firstuse&&!this.timer&&!this.player.timer&&!this.player.itemtimer}step(){step>=this.timer&&(this.uptime+=this.timer-this.starttimer,this.timer=0,this.firstuse=!1,this.player.updateBonusDmg())}}class Avenger extends Aura{constructor(t){super(t),this.duration=10,this.stats={ap:200},this.name="Argent Avenger"}}